{"version":3,"file":"NavigationTabContent.js","mappings":"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","sources":["webpack://geonorge/webpack/universalModuleDefinition","webpack://geonorge/../node_modules/super-custom-elements/src/listen.ts","webpack://geonorge/../node_modules/super-custom-elements/src/watch.ts","webpack://geonorge/../node_modules/super-custom-elements/src/util.ts","webpack://geonorge/../node_modules/super-custom-elements/src/index.ts","webpack://geonorge/../node_modules/super-custom-elements/src/helpers.ts","webpack://geonorge/./stories/navigation-tabs/navigation-tab-content/navigation-tab-content.ts","webpack://geonorge/../node_modules/super-custom-elements/src/custom-element.ts","webpack://geonorge/../node_modules/super-custom-elements/src/toggle.ts","webpack://geonorge/./stories/navigation-tabs/navigation-tab-content/navigation-tab-content.html","webpack://geonorge/../node_modules/super-custom-elements/src/prop.ts","webpack://geonorge/../node_modules/super-custom-elements/src/component.ts","webpack://geonorge/webpack/bootstrap","webpack://geonorge/webpack/runtime/define property getters","webpack://geonorge/webpack/runtime/hasOwnProperty shorthand","webpack://geonorge/webpack/runtime/make namespace object","webpack://geonorge/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"geonorge\"] = factory();\n\telse\n\t\troot[\"geonorge\"] = root[\"geonorge\"] || {}, root[\"geonorge\"][\"NavigationTabContent\"] = factory();\n})(self, () => {\nreturn ","import { toDotCase } from './util';\r\n\r\ninterface ListenerMetadata {\r\n  eventName: string;\r\n  handler: Function;\r\n  selector?: string;\r\n}\r\n\r\ninterface CustomEventOptions {\r\n  bubbles?: boolean;\r\n  composed?: boolean;\r\n  detail?: any;\r\n}\r\n\r\ninterface DispatchEmitter {\r\n  emit(options?: CustomEventOptions): void;\r\n}\r\n\r\nconst Listen = (eventName: string, selector?: string) => {\r\n  return (target: any, methodName: string) => {\r\n    if (!target.constructor.listeners) {\r\n      target.constructor.listeners = [];\r\n    }\r\n    target.constructor.listeners.push({ selector: selector, eventName: eventName, handler: target[methodName] });\r\n  };\r\n};\r\n\r\nconst addEventListeners = (target: any) => {\r\n  if (target.constructor.listeners) {\r\n    const targetRoot: any = target.shadowRoot || target;\r\n    for (const listener of target.constructor.listeners as Array<ListenerMetadata>) {\r\n      const eventTarget = (listener.selector)\r\n        ? targetRoot.querySelector(listener.selector)\r\n          ? targetRoot.querySelector(listener.selector) : null\r\n        : target;\r\n      if (eventTarget) {\r\n        eventTarget.addEventListener(listener.eventName, (e: CustomEvent) => {\r\n          listener.handler.call(target, e);\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst Dispatch = (eventName?: string) => {\r\n  return (target: HTMLElement, propertyName: string) => {\r\n    function get() {\r\n      const self: EventTarget = this as EventTarget;\r\n      return {\r\n        emit(options?: CustomEventOptions) {\r\n          const evtName = (eventName) ? eventName : toDotCase(propertyName);\r\n          self.dispatchEvent(new CustomEvent(evtName, options));\r\n        }\r\n      };\r\n    }\r\n    Object.defineProperty(target, propertyName, { get });\r\n  };\r\n};\r\n\r\nexport { Listen, addEventListeners, DispatchEmitter, Dispatch, CustomEventOptions, ListenerMetadata };","import { toKebabCase } from './util';\r\n\r\nexport const Watch = (attrName: string) => {\r\n  return (target: any, propertyName: string) => {\r\n    if (!target.constructor.watchAttributes) {\r\n      target.constructor.watchAttributes = {};\r\n    }\r\n    target.constructor.watchAttributes[toKebabCase(attrName)] = propertyName;\r\n    if (!target.constructor.propsInit) {\r\n      target.constructor.propsInit = {};\r\n    }\r\n    target.constructor.propsInit[attrName] = null;\r\n  };\r\n};","export const toKebabCase = (str: string) => {\r\n  return str\r\n    .replace(/([a-z])([A-Z])/g, '$1-$2')\r\n    .replace(/[\\s_]+/g, '-')\r\n    .toLowerCase();\r\n};\r\n\r\nexport const toCamelCase = (str: string) => {\r\n  return str\r\n    .toLowerCase()\r\n    .replace(/(\\-\\w)/g, (m) => m[1].toUpperCase());\r\n};\r\n\r\nexport const toDotCase = (str: string) => {\r\n  return str.replace(/(?!^)([A-Z])/g, ' $1')\r\n    .replace(/[_\\s]+(?=[a-zA-Z])/g, '.')\r\n    .toLowerCase();\r\n};\r\n\r\nexport const tryParseInt = (value: any) => {\r\n  return (parseInt(value) == value && parseFloat(value) !== NaN) ? parseInt(value) : value;\r\n};\r\n","export * from './component';\r\nexport * from './custom-element';\r\nexport * from './helpers';\r\nexport * from './listen';\r\nexport * from './prop';\r\nexport * from './toggle';\r\nexport * from './types';\r\nexport * from './watch';","export const getElement = <T extends HTMLElement>(selector: string): T => {\r\n  return document.querySelector(selector);\r\n};\r\n\r\nexport const getShadowRootElement = <T extends HTMLElement>(customElement: HTMLElement, selector: string): T => {\r\n  return customElement.shadowRoot.querySelector(selector);\r\n};","// Dependencies\nimport { Component, CustomElement, CustomElementOptions, Prop, getElement } from \"super-custom-elements\";\n\nlet navigationTabContentCounter = 0;\n\ninterface NavigationTabContentOptions extends CustomElementOptions {}\n\n@Component({\n    tag: \"navigation-tab-content\",\n    template: import(\"./navigation-tab-content.html\")\n})\nexport class NavigationTabContent extends CustomElement {\n    private static readonly elementSelector = \"navigation-tab-content\";\n\n    static get observedAttributes() {\n        return [\"selected\"];\n    }\n\n    @Prop() id: string;\n\n    constructor() {\n        super();\n    }\n\n    setup(options?: NavigationTabContentOptions): void {\n        this.connect(options.container);\n        if (options.id) {\n            this.id = options.id;\n        }\n    }\n\n    connectedCallback() {\n        this.setAttribute(\"role\", \"tabpanel\");\n        if (!this.id) {\n            this.id = `navigation-tab-content-${navigationTabContentCounter++}`;\n        }\n    }\n\n    disconnectedCallback() {}\n\n    public static setup(selector: string, options: NavigationTabContentOptions) {\n        const element = getElement<NavigationTabContent>(selector);\n    }\n}\n","import { CustomElementOptions } from \"./types\";\r\n\r\nexport abstract class CustomElement extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  protected abstract setup(options?: CustomElementOptions): void;\r\n\r\n  protected connect(selector: string): void {\r\n    if (!this.isConnected) {\r\n      document.querySelector(selector).appendChild(this);\r\n    }\r\n  }\r\n}\r\n","import { toKebabCase } from './util';\r\n\r\nexport const Toggle = (): any => {\r\n  return (target: any, propName: any) => {\r\n    function get() {\r\n      const getAttribute = (propName: string) => {\r\n        if (this.hasAttribute(propName)) {\r\n          const attrValue = this.getAttribute(propName);\r\n          if (/^(true|false|^$)$/.test(attrValue)) {\r\n            return attrValue == 'true' || attrValue == '';\r\n          } else {\r\n            return false;\r\n          }\r\n        }\r\n        return false;\r\n      };\r\n      return getAttribute(propName);\r\n    }\r\n    function set(value: any) {\r\n      const oldValue = value;\r\n      if (value != undefined) {\r\n        switch (typeof value) {\r\n          case 'boolean':\r\n            break;\r\n          case 'string':\r\n            if (/^(true|false|^$)$/.test(value)) {\r\n              value = oldValue == 'true' || oldValue == '';\r\n            } else {\r\n              console.warn(`TypeError: Cannot set boolean toggle property '${propName}' to '${value}'`);\r\n              value = false;\r\n            }\r\n            break;\r\n          default:\r\n            throw (`TypeError: Cannot set boolean toggle property '${propName}' to '${value}'`);\r\n        }\r\n      }\r\n      if (this.__connected) {\r\n        this.props[propName] = value || false;\r\n        if (oldValue !== '' && oldValue !== null) {\r\n          this.setAttribute(propName, value);\r\n        } else {\r\n          if (value) {\r\n            this.setAttribute(propName, '');\r\n          } else {\r\n            this.removeAttribute(propName);\r\n          }\r\n        }\r\n      } else {\r\n        if (!this.hasAttribute(toKebabCase(propName))) {\r\n          this.constructor.propsInit[propName] = value;\r\n        }\r\n      }\r\n    }\r\n    if (!target.constructor.propsInit) {\r\n      target.constructor.propsInit = {};\r\n    }\r\n    target.constructor.propsInit[propName] = null;\r\n    Object.defineProperty(target, propName, { get, set });\r\n  };\r\n};\r\n","export default \"<template>\\n    <slot name=\\\"tab-content\\\"></slot>\\n</template>\";","import { toKebabCase, tryParseInt } from './util';\r\n\r\nexport const Prop = (): any => {\r\n  return (target: any, propName: any) => {\r\n    const attrName = toKebabCase(propName);\r\n    function get() {\r\n      if (this.props[propName]) {\r\n        return this.props[propName];\r\n      }\r\n      return this.getAttribute(attrName);\r\n    }\r\n    function set(value: any) {\r\n      if (this.__connected) {\r\n        const oldValue = this.props[propName];\r\n        this.props[propName] = tryParseInt(value);\r\n        if (typeof value != 'object') {\r\n          this.setAttribute(attrName, value);\r\n        } else {\r\n          this.onAttributeChange(attrName, oldValue, value, false);\r\n        }\r\n      } else {\r\n        if (!this.hasAttribute(toKebabCase(propName))) {\r\n          this.constructor.propsInit[propName] = value;\r\n        }\r\n      }\r\n    }\r\n    if (!target.constructor.propsInit) {\r\n      target.constructor.propsInit = {};\r\n    }\r\n    target.constructor.propsInit[propName] = null;\r\n    Object.defineProperty(target, propName, { get, set });\r\n  };\r\n};\r\n\r\nconst getProps = (target: any) => {\r\n  const watchAttributes = target.constructor.watchAttributes;\r\n  const plainAttributes = { ...watchAttributes };\r\n  Object.keys(plainAttributes).forEach(v => plainAttributes[v] = '');\r\n  const cycleProps = { ...plainAttributes, ...target.constructor.propsInit };\r\n  return Object.keys(cycleProps);\r\n};\r\n\r\nexport const initializeProps = (target: any) => {\r\n  const watchAttributes = target.constructor.watchAttributes;\r\n  for (let prop of getProps(target)) {\r\n    if (watchAttributes) {\r\n      if (watchAttributes[toKebabCase(prop)] == null) {\r\n        watchAttributes[toKebabCase(prop)] = '';\r\n      } else {\r\n        const attribValue = target.props[prop] || target.getAttribute(toKebabCase(prop));\r\n        if (typeof target[watchAttributes[prop]] == 'function') {\r\n          target[watchAttributes[prop]]({ new: attribValue });\r\n        }\r\n      }\r\n    }\r\n    if (target.constructor.propsInit[prop]) {\r\n      if (!target.hasAttribute(toKebabCase(prop))) {\r\n        target[prop] = target.constructor.propsInit[prop];\r\n      }\r\n    }\r\n  }\r\n};","import { addEventListeners, ListenerMetadata } from './listen';\r\nimport { initializeProps } from './prop';\r\nimport { ComponentMetadata, KeyValue } from './types';\r\nimport { toKebabCase, toCamelCase } from './util';\r\n\r\nexport const Component = (args: ComponentMetadata) => {\r\n  return (target: any) => {\r\n    const tag: string = args.tag || toKebabCase(target.prototype.constructor.name);\r\n    const customElement: any = class extends (target as { new(): any }) {\r\n      protected static __connected: boolean = false;\r\n      protected static propsInit: KeyValue;\r\n      protected static watchAttributes: KeyValue;\r\n      protected static listeners: ListenerMetadata[];\r\n      protected static ready: Promise<boolean> = new Promise((resolve, _) => resolve(true));\r\n      public props: KeyValue = {};\r\n      private showShadowRoot: boolean;\r\n\r\n      public static get observedAttributes(): string[] {\r\n        return Object.keys(this.propsInit || {}).map(x => toKebabCase(x));\r\n      }\r\n\r\n      constructor() {\r\n        super();\r\n\r\n        this.showShadowRoot = args.shadow == null ? true : args.shadow;\r\n\r\n        if (!this.shadowRoot && this.showShadowRoot) {\r\n          this.attachShadow({ mode: 'open' });\r\n        }\r\n      }\r\n\r\n      public attributeChangedCallback(name: string, oldValue: string, newValue: string): void {\r\n        this.onAttributeChange(name, oldValue, newValue);\r\n      }\r\n\r\n      public onAttributeChange(name: string, oldValue: string, newValue: string, set: boolean = true): void {\r\n        if (oldValue != newValue) {\r\n          if (set) { this[toCamelCase(name)] = newValue; }\r\n          const watchAttributes: KeyValue = (this.constructor as any).watchAttributes;\r\n          if (watchAttributes && watchAttributes[name]) {\r\n            const methodToCall: string = watchAttributes[name];\r\n            if (this.__connected) {\r\n              if (typeof this[methodToCall] == 'function') {\r\n                this[methodToCall]({ old: oldValue, new: newValue });\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      public async connectedCallback(): Promise<void> {\r\n        await this.render();\r\n        super.connectedCallback && super.connectedCallback();\r\n        this.__connected = true;\r\n\r\n        addEventListeners(this);\r\n        initializeProps(this);\r\n      }\r\n\r\n      private async render(): Promise<void> {\r\n        if (this.__connected) {\r\n          return;\r\n        }\r\n\r\n        const template = document.createElement('template');\r\n        template.innerHTML = await this.getStyle();\r\n\r\n        if (args.template instanceof Promise) {\r\n          template.content.appendChild(await this.getExternalTemplate());\r\n        } else if (typeof args.template === 'string') {\r\n          template.innerHTML += args.template;\r\n        }\r\n\r\n        (this.showShadowRoot ? this.shadowRoot : this).appendChild(template.content.cloneNode(true));\r\n      }\r\n\r\n      private async getExternalTemplate(): Promise<DocumentFragment> {\r\n        const templateModule = await (args.template as Promise<typeof import('*.html')>);\r\n        const markup = templateModule.default.toString();\r\n        const fragment = document.createRange().createContextualFragment(markup);\r\n\r\n        if (fragment.children.length === 1 && fragment.children[0].nodeName === 'TEMPLATE') {\r\n          return (fragment.firstChild as HTMLTemplateElement).content;\r\n        }\r\n        return fragment;\r\n      }\r\n\r\n      private async getStyle(): Promise<string> {\r\n        let css: string;\r\n\r\n        if (args.style instanceof Promise) {\r\n          const styleModule = await args.style;\r\n          css = styleModule.default.toString();\r\n        } else if (typeof args.style === 'string') {\r\n          css = args.style;\r\n        }\r\n\r\n        return `${css ? `<style>${css}</style>` : ''}`\r\n      }\r\n    };\r\n\r\n    if (!customElements.get(tag)) {\r\n      customElements.define(tag, customElement);\r\n    }\r\n\r\n    return customElement;\r\n  };\r\n};\r\n\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(3676);\n"],"names":["root","factory","exports","module","define","amd","self","Listen","eventName","selector","target","methodName","constructor","listeners","push","handler","addEventListeners","targetRoot","shadowRoot","listener","eventTarget","querySelector","addEventListener","e","call","Dispatch","propertyName","Object","defineProperty","get","this","emit","options","evtName","toDotCase","dispatchEvent","CustomEvent","Watch","attrName","watchAttributes","toKebabCase","propsInit","str","replace","toLowerCase","toCamelCase","m","toUpperCase","tryParseInt","value","parseInt","NaN","parseFloat","getElement","document","getShadowRootElement","customElement","navigationTabContentCounter","NavigationTabContent","CustomElement","observedAttributes","super","setup","connect","container","id","connectedCallback","setAttribute","disconnectedCallback","elementSelector","Prop","Component","tag","template","HTMLElement","isConnected","appendChild","Toggle","propName","hasAttribute","attrValue","getAttribute","test","set","oldValue","undefined","console","warn","__connected","props","removeAttribute","onAttributeChange","initializeProps","prop","plainAttributes","keys","forEach","v","cycleProps","getProps","attribValue","new","args","prototype","name","showShadowRoot","shadow","attachShadow","mode","map","x","attributeChangedCallback","newValue","methodToCall","old","render","createElement","innerHTML","getStyle","Promise","content","getExternalTemplate","cloneNode","markup","default","toString","fragment","createRange","createContextualFragment","children","length","nodeName","firstChild","css","style","ready","resolve","_","customElements","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","key","o","enumerable","obj","hasOwnProperty","r","Symbol","toStringTag"],"sourceRoot":""}